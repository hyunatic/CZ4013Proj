{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Iskandar\\\\Downloads\\\\CZ4013Proj\\\\client\\\\src\\\\pages\\\\MonitorUpdate.jsx\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\nimport { MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBInput } from 'mdbreact';\nimport { connect } from 'react-redux';\nimport Navbar from '../components/share/Navbar';\nimport Footer from '../components/share/Footer';\nimport { io } from \"socket.io-client\";\nimport { Marshalling, UnMarshalling } from '../Redux/Actions/MarshalService'; //Always instantiate this\n\nconst socket = io('http://localhost:2222/', {\n  transports: ['websocket']\n});\n\nclass MonitorUpdate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      accountAmount: 0,\n      timeoutRetransmit: true,\n      logger: [],\n      modal: false,\n      time: \"\"\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.CheckUpdate = () => {\n      socket.on('monitor-updates', data => {\n        data = UnMarshalling(data);\n        data = data['Server-Response'][0];\n        var arr = this.state.logger;\n        var checkExists = arr.filter(x => x.AccountNo === data.AccountNo && x.AccName === data.AccName && x.Balance === data.Balance && x.Function === data.Function).length;\n\n        if (checkExists == 0) {\n          arr.push(data);\n          this.setState({\n            logger: arr\n          });\n        }\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.toggle();\n    this.interval = setInterval(() => {\n      !this.state.modal ? this.CheckUpdate() : \"\";\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Monitoring Update: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MDBTable, {\n          children: [/*#__PURE__*/_jsxDEV(MDBTableHead, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Function Used\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MDBTableBody, {\n            children: this.state.logger && this.state.logger.map(x => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: x.AccountNo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: x.AccName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: x.Balance\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: x.Function\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MDBModal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        children: [/*#__PURE__*/_jsxDEV(MDBModalHeader, {\n          toggle: this.toggle,\n          children: \"Set Time Limit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MDBModalBody, {\n          children: /*#__PURE__*/_jsxDEV(MDBInput, {\n            onChange: this.handleChange,\n            id: \"time\",\n            label: \"Input time (seconds)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MDBModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n            color: \"secondary\",\n            onClick: this.toggle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MonitorUpdate;","map":{"version":3,"sources":["C:/Users/Iskandar/Downloads/CZ4013Proj/client/src/pages/MonitorUpdate.jsx"],"names":["React","Component","MDBContainer","MDBTable","MDBTableBody","MDBTableHead","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","MDBInput","connect","Navbar","Footer","io","Marshalling","UnMarshalling","socket","transports","MonitorUpdate","state","accountAmount","timeoutRetransmit","logger","modal","time","toggle","setState","CheckUpdate","on","data","arr","checkExists","filter","x","AccountNo","AccName","Balance","Function","length","push","handleChange","e","target","id","value","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { MDBContainer, MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\"\r\nimport {\r\n    MDBBtn,\r\n    MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBModalFooter,\r\n    MDBInput\r\n} from 'mdbreact';\r\nimport { connect } from 'react-redux'\r\nimport Navbar from '../components/share/Navbar'\r\nimport Footer from '../components/share/Footer'\r\nimport { io } from \"socket.io-client\"\r\nimport { Marshalling, UnMarshalling } from '../Redux/Actions/MarshalService'\r\n\r\n//Always instantiate this\r\nconst socket = io('http://localhost:2222/', { transports: ['websocket'] })\r\n\r\nclass MonitorUpdate extends Component {\r\n\r\n    state = {\r\n        accountAmount: 0,\r\n        timeoutRetransmit: true,\r\n        logger: [],\r\n        modal: false,\r\n        time: \"\"\r\n    }\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        this.toggle()\r\n        this.interval = setInterval(() => { (!this.state.modal) ? this.CheckUpdate() : \"\" }, 5000)\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n    CheckUpdate = () => {\r\n        socket.on('monitor-updates', (data) => {\r\n            data = UnMarshalling(data)\r\n            data = data['Server-Response'][0]\r\n\r\n            var arr = this.state.logger\r\n            var checkExists = arr.filter(x => x.AccountNo === data.AccountNo && x.AccName === data.AccName && x.Balance === data.Balance && x.Function === data.Function).length\r\n            if (checkExists == 0) {\r\n                arr.push(data)\r\n                this.setState({ logger: arr })\r\n            }\r\n        })\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar /><br />\r\n                <MDBContainer>\r\n                    <h3>Monitoring Update: </h3>\r\n                    <MDBTable>\r\n                        <MDBTableHead>\r\n                            <tr>\r\n                                <th>Account Number</th>\r\n                                <th>Account Name</th>\r\n                                <th>Balance</th>\r\n                                <th>Function Used</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {this.state.logger && this.state.logger.map(x => {\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{x.AccountNo}</td>\r\n                                        <td>{x.AccName}</td>\r\n                                        <td>{x.Balance}</td>\r\n                                        <td>{x.Function}</td>\r\n                                    </tr>)\r\n                            })}\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                </MDBContainer>\r\n\r\n                <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <MDBModalHeader toggle={this.toggle}>Set Time Limit</MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <MDBInput onChange={this.handleChange} id=\"time\" label=\"Input time (seconds)\" />\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter>\r\n                        <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n                <br />\r\n                <br />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (MonitorUpdate)\r\n"]},"metadata":{},"sourceType":"module"}