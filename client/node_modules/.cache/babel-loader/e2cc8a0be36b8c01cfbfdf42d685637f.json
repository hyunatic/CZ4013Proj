{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Iskandar\\\\Downloads\\\\CZ4013Proj\\\\client\\\\src\\\\pages\\\\Withdraw.jsx\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBCard, MDBCardBody, MDBIcon, MDBInput, MDBBtn, MDBView } from 'mdbreact';\nimport Navbar from '../components/share/Navbar';\nimport { connect } from 'react-redux';\nimport { io } from \"socket.io-client\";\nimport { Marshalling, UnMarshalling } from '../Redux/Actions/MarshalService';\nimport Footer from '../components/share/Footer';\n\nclass Withdraw extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      timeoutRetransmit: true,\n      AccountNo: \"\",\n      AccName: \"\",\n      Password: \"\",\n      Currency: \"\",\n      Amount: 0,\n      Mode: 0,\n      retry: false\n    };\n\n    this.WithdrawalTransaction = () => {\n      console.log(\"Retrying Withdrawal\");\n      if (!this.state.timeoutRetransmit) return;\n      const socket = io('http://localhost:2222/', {\n        transports: ['websocket']\n      });\n      let sendingData = {\n        AccountNo: this.state.AccountNo,\n        AccName: this.state.AccName,\n        Password: this.state.Password,\n        Currency: this.state.Currency,\n        Amount: parseFloat(this.state.Amount),\n        Mode: this.state.Mode\n      };\n      let marshallData = Marshalling(sendingData);\n      socket.emit('withdraw', marshallData);\n      socket.on('withdraw-reply', data => {\n        data = UnMarshalling(data);\n        data = data['Server-Response'][0];\n        this.setState({\n          timeoutRetransmit: false\n        });\n\n        if (data === \"I\") {\n          alert(\"Insufficient Balance\");\n          this.Back();\n        } else {\n          alert(\"Your new Balance is: \" + data.Balance);\n          socket.emit('withdraw-ack', marshallData);\n          clearTimeout();\n          this.Back();\n        }\n      });\n      this.setState({\n        timeoutRetransmit: true,\n        retry: true\n      });\n      setTimeout(() => this.WithdrawalTransaction(), 5000);\n    };\n\n    this.Back = () => {\n      this.props.history.push('/home');\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      timeoutRetransmit: true\n    });\n    clearTimeout();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"innerpagedesign\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(MDBView, {\n        children: [/*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: /*#__PURE__*/_jsxDEV(MDBCard, {\n            id: \"classic-card\",\n            children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n              className: \"black-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(MDBIcon, {\n                  icon: \"user\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this), \" Withdraw:\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"hr-light\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"black-text\",\n                iconClass: \"black-text\",\n                label: \"Account No\",\n                icon: \"envelope\",\n                id: \"AccountNo\",\n                type: \"number\",\n                value: this.state.AccountNo,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"black-text\",\n                iconClass: \"black-text\",\n                label: \"Account Name\",\n                icon: \"user\",\n                id: \"AccName\",\n                type: \"text\",\n                value: this.state.AccName,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"black-text\",\n                iconClass: \"black-text\",\n                label: \"Password\",\n                icon: \"lock\",\n                id: \"Password\",\n                type: \"password\",\n                value: this.state.Password,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"black-text\",\n                iconClass: \"black-text\",\n                label: \"SGD/MYR/KRW\",\n                icon: \"money-bill\",\n                id: \"Currency\",\n                type: \"text\",\n                value: this.state.Currency,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"black-text\",\n                iconClass: \"black-text\",\n                label: \"Withdraw Amount\",\n                icon: \"dollar-sign\",\n                type: \"number\",\n                id: \"Amount\",\n                value: this.state.Amount,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"Mode\",\n                onChange: this.handleChange,\n                value: this.state.Mode,\n                className: \"browser-default custom-select\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"No Ack\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  children: \"At least once\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"At most once\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), this.state.retry ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"red-text\",\n                children: \"Retrying....\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 55\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 98\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mt-4 black-text\",\n                children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n                  color: \"dark-green\",\n                  onClick: this.WithdrawalTransaction,\n                  children: \" Withdraw\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  color: \"white\",\n                  onClick: this.Back,\n                  children: \" Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                  className: \"hr-light\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps)(Withdraw);","map":{"version":3,"sources":["C:/Users/Iskandar/Downloads/CZ4013Proj/client/src/pages/Withdraw.jsx"],"names":["React","Component","MDBContainer","MDBCard","MDBCardBody","MDBIcon","MDBInput","MDBBtn","MDBView","Navbar","connect","io","Marshalling","UnMarshalling","Footer","Withdraw","state","timeoutRetransmit","AccountNo","AccName","Password","Currency","Amount","Mode","retry","WithdrawalTransaction","console","log","socket","transports","sendingData","parseFloat","marshallData","emit","on","data","setState","alert","Back","Balance","clearTimeout","setTimeout","props","history","push","handleChange","e","target","id","value","componentWillUnmount","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { MDBContainer, MDBCard, MDBCardBody, MDBIcon, MDBInput, MDBBtn, MDBView } from 'mdbreact'\r\nimport Navbar from '../components/share/Navbar'\r\nimport { connect } from 'react-redux'\r\nimport { io } from \"socket.io-client\"\r\nimport { Marshalling, UnMarshalling } from '../Redux/Actions/MarshalService'\r\nimport Footer from '../components/share/Footer'\r\n\r\n\r\nclass Withdraw extends Component {\r\n    state = {\r\n        timeoutRetransmit: true,\r\n        AccountNo: \"\",\r\n        AccName: \"\",\r\n        Password: \"\",\r\n        Currency: \"\",\r\n        Amount: 0,\r\n        Mode: 0,\r\n        retry: false\r\n    }\r\n    componentWillUnmount() {\r\n        this.setState({ timeoutRetransmit: true })\r\n        clearTimeout()\r\n    }\r\n    WithdrawalTransaction = () => {\r\n        console.log(\"Retrying Withdrawal\")\r\n        if (!this.state.timeoutRetransmit)\r\n            return\r\n        const socket = io('http://localhost:2222/', { transports: ['websocket'] })\r\n        let sendingData = {\r\n            AccountNo: this.state.AccountNo,\r\n            AccName: this.state.AccName,\r\n            Password: this.state.Password,\r\n            Currency: this.state.Currency,\r\n            Amount: parseFloat(this.state.Amount),\r\n            Mode: this.state.Mode\r\n        }\r\n        let marshallData = Marshalling(sendingData)\r\n\r\n        socket.emit('withdraw', marshallData)\r\n        socket.on('withdraw-reply', (data) => {\r\n            data = UnMarshalling(data)\r\n            data = data['Server-Response'][0]\r\n            this.setState({ timeoutRetransmit: false })\r\n            if (data === \"I\") {\r\n                alert(\"Insufficient Balance\")\r\n                this.Back()\r\n            }\r\n            else {\r\n                alert(\"Your new Balance is: \" + data.Balance)\r\n                socket.emit('withdraw-ack', marshallData)\r\n                clearTimeout()\r\n                this.Back()\r\n            }\r\n        })\r\n\r\n        this.setState({ timeoutRetransmit: true, retry: true })\r\n        setTimeout(() => this.WithdrawalTransaction(), 5000)\r\n    }\r\n\r\n    Back = () => {\r\n        this.props.history.push('/home')\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"innerpagedesign\">\r\n                <Navbar /><br />\r\n                <MDBView>\r\n                    <MDBContainer>\r\n                        <MDBCard id=\"classic-card\">\r\n                            <MDBCardBody className=\"black-text\">\r\n                                <h3 className=\"text-center\">\r\n                                    <MDBIcon icon=\"user\" /> Withdraw:\r\n                                </h3>\r\n                                <hr className=\"hr-light\" />\r\n                                <MDBInput\r\n                                    className=\"black-text\"\r\n                                    iconClass=\"black-text\"\r\n                                    label=\"Account No\"\r\n                                    icon=\"envelope\"\r\n                                    id=\"AccountNo\"\r\n                                    type=\"number\"\r\n                                    value={this.state.AccountNo}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <MDBInput\r\n                                    className=\"black-text\"\r\n                                    iconClass=\"black-text\"\r\n                                    label=\"Account Name\"\r\n                                    icon=\"user\"\r\n                                    id=\"AccName\"\r\n                                    type=\"text\"\r\n                                    value={this.state.AccName}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <MDBInput\r\n                                    className=\"black-text\"\r\n                                    iconClass=\"black-text\"\r\n                                    label=\"Password\"\r\n                                    icon=\"lock\"\r\n                                    id=\"Password\"\r\n                                    type=\"password\"\r\n                                    value={this.state.Password}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <MDBInput\r\n                                    className=\"black-text\"\r\n                                    iconClass=\"black-text\"\r\n                                    label=\"SGD/MYR/KRW\"\r\n                                    icon=\"money-bill\"\r\n                                    id=\"Currency\"\r\n                                    type=\"text\"\r\n                                    value={this.state.Currency}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <MDBInput\r\n                                    className=\"black-text\"\r\n                                    iconClass=\"black-text\"\r\n                                    label=\"Withdraw Amount\"\r\n                                    icon=\"dollar-sign\"\r\n                                    type=\"number\"\r\n                                    id=\"Amount\"\r\n                                    value={this.state.Amount}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <select id=\"Mode\" onChange={this.handleChange} value={this.state.Mode} className=\"browser-default custom-select\">\r\n                                    <option value=\"0\">No Ack</option>\r\n                                    <option value=\"1\">At least once</option>\r\n                                    <option value=\"2\">At most once</option>\r\n                                </select>\r\n                                {(this.state.retry) ? <p className='red-text'>Retrying....</p> : <p></p>}\r\n                                <div className=\"text-center mt-4 black-text\">\r\n                                    <MDBBtn color=\"dark-green\" onClick={this.WithdrawalTransaction} > Withdraw\r\n                                    </MDBBtn>\r\n                                    <MDBBtn color=\"white\" onClick={this.Back} > Back\r\n                                    </MDBBtn>\r\n                                    <hr className=\"hr-light\" />\r\n                                </div>\r\n\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBContainer>\r\n                    <Footer />\r\n                </MDBView>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({});\r\nexport default connect(mapStateToProps)(Withdraw)"]},"metadata":{},"sourceType":"module"}