{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Iskandar\\\\Downloads\\\\CZ4013Proj\\\\client\\\\src\\\\pages\\\\OpenAccount.jsx\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBCard, MDBCardBody, MDBIcon, MDBInput, MDBBtn } from 'mdbreact';\nimport Navbar from '../components/share/Navbar';\nimport { connect } from 'react-redux';\nimport { io } from \"socket.io-client\";\nimport { Marshalling, UnMarshalling } from '../Redux/Actions/MarshalService'; //Always instantiate this\n\nclass OpenAccount extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      AccName: \"\",\n      Password: \"\",\n      Currency: \"\",\n      Balance: \"\",\n      AccountNo: \"\"\n    };\n\n    this.setData = () => {\n      let newacc = {\n        'name': this.state.AccName,\n        'pass': this.state.Password\n      };\n      localStorage.setItem('new_acc', JSON.stringify(newacc));\n      this.props.history.push('/');\n    };\n\n    this.initiateOpen = () => {\n      const socket = io('http://localhost:2222/', {\n        transports: ['websocket']\n      });\n      let sendingData = {\n        AccName: this.state.AccName,\n        Password: this.state.Password,\n        Currency: this.state.Currency,\n        Balance: parseFloat(this.state.Balance),\n        //Mode is 0,1,2 [Must send]\n        Mode: 1\n      };\n      let marshallData = Marshalling(sendingData);\n      socket.emit('open-account', marshallData); //Do timeout at this portion\n\n      socket.on('open-account-reply', data => {\n        data = UnMarshalling(data);\n        var reply = data['Server-Response'];\n        console.log(reply);\n        this.setState({\n          AccountNo: reply\n        }); //Do what ever you want\n\n        let newacc = {\n          'name': this.state.AccName,\n          'pass': this.state.Password,\n          'accNo': reply\n        };\n        localStorage.setItem('new_acc', JSON.stringify(newacc));\n        socket.emit('open-account-ack', marshallData);\n      });\n    };\n\n    this.CallbackFunction = () => {\n      socket.on('monitor-updates', data => {\n        data = UnMarshalling(data); //Do what ever you want\n\n        console.log(data);\n      });\n    };\n\n    this.back = () => {\n      this.props.history.push('/home');\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: /*#__PURE__*/_jsxDEV(MDBCard, {\n          id: \"classic-card\",\n          children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n            className: \"black-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(MDBIcon, {\n                icon: \"user-check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }, this), \" Open Account:\", /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [\"Account No:\", this.state.AccountNo]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"hr-light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"black-text\",\n              iconClass: \"black-text\",\n              label: \"Account Name\",\n              icon: \"user\",\n              id: \"AccName\",\n              type: \"text\",\n              value: this.state.AccName,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"black-text\",\n              iconClass: \"black-text\",\n              label: \"Password\",\n              icon: \"lock\",\n              id: \"Password\",\n              type: \"password\",\n              value: this.state.Password,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"black-text\",\n              iconClass: \"black-text\",\n              label: \"SGD/MYR/KRW\",\n              icon: \"money-bill\",\n              id: \"Currency\",\n              type: \"text\",\n              value: this.state.Currency,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"black-text\",\n              iconClass: \"black-text\",\n              label: \"Balance\",\n              icon: \"dollar-sign\",\n              type: \"number\",\n              id: \"Balance\",\n              value: this.state.Balance,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-4 black-text\",\n              children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n                color: \"white\",\n                onClick: this.initiateOpen,\n                children: \" Open Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n                color: \"white\",\n                onClick: this.back,\n                children: \" Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"hr-light\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps)(OpenAccount);","map":{"version":3,"sources":["C:/Users/Iskandar/Downloads/CZ4013Proj/client/src/pages/OpenAccount.jsx"],"names":["React","Component","MDBContainer","MDBCard","MDBCardBody","MDBIcon","MDBInput","MDBBtn","Navbar","connect","io","Marshalling","UnMarshalling","OpenAccount","state","AccName","Password","Currency","Balance","AccountNo","setData","newacc","localStorage","setItem","JSON","stringify","props","history","push","initiateOpen","socket","transports","sendingData","parseFloat","Mode","marshallData","emit","on","data","reply","console","log","setState","CallbackFunction","back","handleChange","e","target","id","value","render","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,WAAhC,EAA6CC,OAA7C,EAAsDC,QAAtD,EAAgEC,MAAhE,QAA8E,UAA9E;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,iCAA3C,C,CAEA;;AAGA,MAAMC,WAAN,SAA0BZ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCa,KADgC,GACxB;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,QAAQ,EAAE,EAHN;AAIJC,MAAAA,OAAO,EAAE,EAJL;AAKJC,MAAAA,SAAS,EAAE;AALP,KADwB;;AAAA,SAQhCC,OARgC,GAQtB,MAAM;AACZ,UAAIC,MAAM,GAAG;AACT,gBAAQ,KAAKP,KAAL,CAAWC,OADV;AAET,gBAAQ,KAAKD,KAAL,CAAWE;AAFV,OAAb;AAIAM,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAhC;AACA,WAAKK,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,KAf+B;;AAAA,SAgBhCC,YAhBgC,GAgBjB,MAAM;AACjB,YAAMC,MAAM,GAAGpB,EAAE,CAAC,wBAAD,EAA2B;AAAEqB,QAAAA,UAAU,EAAE,CAAC,WAAD;AAAd,OAA3B,CAAjB;AACA,UAAIC,WAAW,GAAG;AACdjB,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OADN;AAEdC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAFP;AAGdC,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAHP;AAIdC,QAAAA,OAAO,EAAEe,UAAU,CAAC,KAAKnB,KAAL,CAAWI,OAAZ,CAJL;AAKd;AACAgB,QAAAA,IAAI,EAAE;AANQ,OAAlB;AAQA,UAAIC,YAAY,GAAGxB,WAAW,CAACqB,WAAD,CAA9B;AACAF,MAAAA,MAAM,CAACM,IAAP,CAAY,cAAZ,EAA4BD,YAA5B,EAXiB,CAYjB;;AAEAL,MAAAA,MAAM,CAACO,EAAP,CAAU,oBAAV,EAAiCC,IAAD,IAAU;AACtCA,QAAAA,IAAI,GAAG1B,aAAa,CAAC0B,IAAD,CAApB;AACA,YAAIC,KAAK,GAAGD,IAAI,CAAC,iBAAD,CAAhB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAKG,QAAL,CAAc;AAACvB,UAAAA,SAAS,EAAEoB;AAAZ,SAAd,EAJsC,CAKtC;;AAEA,YAAIlB,MAAM,GAAG;AACT,kBAAQ,KAAKP,KAAL,CAAWC,OADV;AAET,kBAAQ,KAAKD,KAAL,CAAWE,QAFV;AAGT,mBAASuB;AAHA,SAAb;AAKAjB,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAhC;AAEAS,QAAAA,MAAM,CAACM,IAAP,CAAY,kBAAZ,EAAgCD,YAAhC;AACH,OAfD;AAgBH,KA9C+B;;AAAA,SA+ChCQ,gBA/CgC,GA+Cb,MAAM;AACrBb,MAAAA,MAAM,CAACO,EAAP,CAAU,iBAAV,EAA8BC,IAAD,IAAU;AACnCA,QAAAA,IAAI,GAAG1B,aAAa,CAAC0B,IAAD,CAApB,CADmC,CAEnC;;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,OAJD;AAKH,KArD+B;;AAAA,SAsDhCM,IAtDgC,GAsDzB,MAAM;AACT,WAAKlB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACH,KAxD+B;;AAAA,SA0DhCiB,YA1DgC,GA0DhBC,CAAD,IAAO;AAClB,WAAKJ,QAAL,CAAc;AACZ,SAACI,CAAC,CAACC,MAAF,CAASC,EAAV,GAAeF,CAAC,CAACC,MAAF,CAASE;AADZ,OAAd;AAGD,KA9D6B;AAAA;;AA+DlCC,EAAAA,MAAM,GAAG;AACP,wBACI;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eACU;AAAA;AAAA;AAAA;AAAA,cADV,eAEA,QAAC,YAAD;AAAA,+BACI,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,cAAZ;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,SAAS,EAAC,YAAvB;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,aAAd;AAAA,sCACI,QAAC,OAAD;AAAS,gBAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,sBADJ,iCAEI;AAAA,0CAAgB,KAAKpC,KAAL,CAAWK,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAI,cAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMK,QAAC,QAAD;AACG,cAAA,SAAS,EAAC,YADb;AAEG,cAAA,SAAS,EAAC,YAFb;AAGG,cAAA,KAAK,EAAC,cAHT;AAIG,cAAA,IAAI,EAAC,MAJR;AAKG,cAAA,EAAE,EAAC,SALN;AAMG,cAAA,IAAI,EAAC,MANR;AAOG,cAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,OAPrB;AAQG,cAAA,QAAQ,EAAE,KAAK8B;AARlB;AAAA;AAAA;AAAA;AAAA,oBANL,eAgBK,QAAC,QAAD;AACG,cAAA,SAAS,EAAC,YADb;AAEG,cAAA,SAAS,EAAC,YAFb;AAGG,cAAA,KAAK,EAAC,UAHT;AAIG,cAAA,IAAI,EAAC,MAJR;AAKG,cAAA,EAAE,EAAC,UALN;AAMG,cAAA,IAAI,EAAC,UANR;AAOG,cAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWE,QAPrB;AAQG,cAAA,QAAQ,EAAE,KAAK6B;AARlB;AAAA;AAAA;AAAA;AAAA,oBAhBL,eA0BK,QAAC,QAAD;AACG,cAAA,SAAS,EAAC,YADb;AAEG,cAAA,SAAS,EAAC,YAFb;AAGG,cAAA,KAAK,EAAC,aAHT;AAIG,cAAA,IAAI,EAAC,YAJR;AAKG,cAAA,EAAE,EAAC,UALN;AAMG,cAAA,IAAI,EAAC,MANR;AAOG,cAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWG,QAPrB;AAQG,cAAA,QAAQ,EAAE,KAAK4B;AARlB;AAAA;AAAA;AAAA;AAAA,oBA1BL,eAoCI,QAAC,QAAD;AACI,cAAA,SAAS,EAAC,YADd;AAEI,cAAA,SAAS,EAAC,YAFd;AAGI,cAAA,KAAK,EAAC,SAHV;AAII,cAAA,IAAI,EAAC,aAJT;AAKI,cAAA,IAAI,EAAC,QALT;AAMI,cAAA,EAAE,EAAC,SANP;AAOI,cAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWI,OAPtB;AAQI,cAAA,QAAQ,EAAE,KAAK2B;AARnB;AAAA;AAAA;AAAA;AAAA,oBApCJ,eA+CI;AAAK,cAAA,SAAS,EAAC,6BAAf;AAAA,sCACI,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAsB,gBAAA,OAAO,EAAE,KAAKhB,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAGI,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAsB,gBAAA,OAAO,EAAE,KAAKe,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAKI;AAAI,gBAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgED;;AAhIiC;;AAkIpC,MAAMO,eAAe,GAAGrC,KAAK,KAAK,EAAL,CAA7B;;AACA,eAAeL,OAAO,CAAC0C,eAAD,CAAP,CAA0BtC,WAA1B,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { MDBContainer, MDBCard, MDBCardBody, MDBIcon, MDBInput, MDBBtn } from 'mdbreact'\r\nimport Navbar from '../components/share/Navbar'\r\nimport { connect } from 'react-redux'\r\nimport { io } from \"socket.io-client\"\r\nimport { Marshalling, UnMarshalling } from '../Redux/Actions/MarshalService'\r\n\r\n//Always instantiate this\r\n\r\n\r\nclass OpenAccount extends Component {\r\n    state = { \r\n        AccName: \"\",\r\n        Password: \"\",\r\n        Currency: \"\",\r\n        Balance: \"\",\r\n        AccountNo: \"\",\r\n    }\r\n    setData = () => {\r\n        let newacc = {\r\n            'name': this.state.AccName,\r\n            'pass': this.state.Password,\r\n        }\r\n        localStorage.setItem('new_acc', JSON.stringify(newacc))\r\n        this.props.history.push('/')\r\n    }\r\n    initiateOpen = () => {\r\n        const socket = io('http://localhost:2222/', { transports: ['websocket'] })\r\n        let sendingData = {\r\n            AccName: this.state.AccName,\r\n            Password: this.state.Password,\r\n            Currency: this.state.Currency,\r\n            Balance: parseFloat(this.state.Balance),\r\n            //Mode is 0,1,2 [Must send]\r\n            Mode: 1\r\n        }\r\n        let marshallData = Marshalling(sendingData)\r\n        socket.emit('open-account', marshallData)\r\n        //Do timeout at this portion\r\n\r\n        socket.on('open-account-reply', (data) => {\r\n            data = UnMarshalling(data)\r\n            var reply = data['Server-Response']\r\n            console.log(reply)\r\n            this.setState({AccountNo: reply})\r\n            //Do what ever you want\r\n            \r\n            let newacc = {\r\n                'name': this.state.AccName,\r\n                'pass': this.state.Password,\r\n                'accNo': reply,\r\n            }\r\n            localStorage.setItem('new_acc', JSON.stringify(newacc))\r\n            \r\n            socket.emit('open-account-ack', marshallData)\r\n        })\r\n    }\r\n    CallbackFunction = () => {\r\n        socket.on('monitor-updates', (data) => {\r\n            data = UnMarshalling(data)\r\n            //Do what ever you want\r\n            console.log(data)\r\n        })\r\n    }\r\n    back = () => {\r\n        this.props.history.push('/home')\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n          [e.target.id]: e.target.value\r\n        })\r\n      }\r\n  render() {\r\n    return (\r\n        <div>\r\n        <Navbar /><br />\r\n        <MDBContainer>\r\n            <MDBCard id=\"classic-card\">\r\n                <MDBCardBody className=\"black-text\">\r\n                    <h3 className=\"text-center\">\r\n                        <MDBIcon icon=\"user-check\" /> Open Account:\r\n                        <h1>Account No:{this.state.AccountNo}</h1>\r\n                    </h3>\r\n                    <hr className=\"hr-light\" />\r\n                     <MDBInput\r\n                        className=\"black-text\"\r\n                        iconClass=\"black-text\"\r\n                        label=\"Account Name\"\r\n                        icon=\"user\"\r\n                        id=\"AccName\"\r\n                        type=\"text\"\r\n                        value={this.state.AccName}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                     <MDBInput\r\n                        className=\"black-text\"\r\n                        iconClass=\"black-text\"\r\n                        label=\"Password\"\r\n                        icon=\"lock\"\r\n                        id=\"Password\"\r\n                        type=\"password\"\r\n                        value={this.state.Password}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                     <MDBInput\r\n                        className=\"black-text\"\r\n                        iconClass=\"black-text\"\r\n                        label=\"SGD/MYR/KRW\"\r\n                        icon=\"money-bill\"\r\n                        id=\"Currency\"\r\n                        type=\"text\"\r\n                        value={this.state.Currency}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <MDBInput\r\n                        className=\"black-text\"\r\n                        iconClass=\"black-text\"\r\n                        label=\"Balance\"\r\n                        icon=\"dollar-sign\"\r\n                        type=\"number\"\r\n                        id=\"Balance\"\r\n                        value={this.state.Balance}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    \r\n                    <div className=\"text-center mt-4 black-text\">\r\n                        <MDBBtn color=\"white\" onClick={this.initiateOpen}  > Open Account\r\n                        </MDBBtn>\r\n                        <MDBBtn color=\"white\" onClick={this.back} > Back\r\n                        </MDBBtn>\r\n                        <hr className=\"hr-light\" />\r\n                    </div>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </MDBContainer>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => ({});\r\nexport default connect(mapStateToProps,)(OpenAccount)"]},"metadata":{},"sourceType":"module"}