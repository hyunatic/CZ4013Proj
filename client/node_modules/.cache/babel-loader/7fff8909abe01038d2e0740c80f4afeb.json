{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\CZ4013Proj\\\\client\\\\src\\\\pages\\\\OpenAccount.jsx\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBCard, MDBCardBody, MDBIcon, MDBInput, MDBBtn } from 'mdbreact';\nimport Navbar from '../components/share/Navbar';\nimport { connect } from 'react-redux';\nimport { io } from \"socket.io-client\";\nimport { Marshalling, UnMarshalling } from '../Redux/Actions/MarshalService'; //Always instantiate this\n\nconst socket = io('http://localhost:2222/', {\n  transports: ['websocket']\n});\n\nclass OpenAccount extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // AccName: localStorage.getItem(\"accname\"),\n      // Password: localStorage.getItem(\"password\"),\n      // Currency: localStorage.getItem(\"currency\"),\n      // Balance: localStorage.getItem(\"balance\"),\n      AccName: \"\",\n      Password: \"\",\n      Currency: \"\",\n      Balance: \"\"\n    };\n\n    this.initiateOpen = () => {\n      let sendingData = {\n        AccName: this.state.AccName,\n        Password: this.state.Password,\n        Currency: this.state.Currency,\n        Balance: parseFloat(tthis.state.Balance),\n        //Mode is 0,1,2 [Must send]\n        Mode: 1\n      };\n      let marshallData = Marshalling(sendingData);\n      socket.emit('open-account', marshallData); //Do timeout at this portion\n\n      socket.on('open-account-reply', data => {\n        data = UnMarshalling(data);\n        var reply = data['Server-Response'];\n        console.log(reply); //Do what ever you want\n\n        socket.emit('open-account-ack', marshallData);\n        console.log(data);\n      });\n    };\n\n    this.CallbackFunction = () => {\n      socket.on('monitor-updates', data => {\n        data = UnMarshalling(data); //Do what ever you want\n\n        console.log(data);\n      });\n    };\n\n    this.back = () => {\n      this.props.history.push('/home');\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    socket.on('Connect-Establisment', data => console.log(data));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: /*#__PURE__*/_jsxDEV(MDBCard, {\n          id: \"classic-card\",\n          children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n            className: \"black-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(MDBIcon, {\n                icon: \"user-check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 25\n              }, this), \" Open Account:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"hr-light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"black-text\",\n              iconClass: \"black-text\",\n              label: \"Account Name\",\n              icon: \"user\",\n              id: \"AccName\",\n              type: \"text\",\n              value: this.state.AccName,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"black-text\",\n              iconClass: \"black-text\",\n              label: \"Password\",\n              icon: \"lock\",\n              id: \"Password\",\n              type: \"password\",\n              value: this.state.Password,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"black-text\",\n              iconClass: \"black-text\",\n              label: \"SGD/MYR/KRW\",\n              icon: \"money-bill\",\n              id: \"Currency\",\n              type: \"text\",\n              value: this.state.Currency,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"black-text\",\n              iconClass: \"black-text\",\n              label: \"Balance\",\n              icon: \"dollar-sign\",\n              type: \"number\",\n              id: \"Balance\",\n              value: this.state.Balance,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-4 black-text\",\n              children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n                color: \"white\",\n                onClick: this.initiateOpen,\n                children: \" Open Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n                color: \"white\",\n                onClick: this.back,\n                children: \" Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"hr-light\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps)(OpenAccount);","map":{"version":3,"sources":["C:/Users/Asus/Desktop/CZ4013Proj/client/src/pages/OpenAccount.jsx"],"names":["React","Component","MDBContainer","MDBCard","MDBCardBody","MDBIcon","MDBInput","MDBBtn","Navbar","connect","io","Marshalling","UnMarshalling","socket","transports","OpenAccount","state","AccName","Password","Currency","Balance","initiateOpen","sendingData","parseFloat","tthis","Mode","marshallData","emit","on","data","reply","console","log","CallbackFunction","back","props","history","push","handleChange","e","setState","target","id","value","componentDidMount","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { MDBContainer, MDBCard, MDBCardBody, MDBIcon, MDBInput, MDBBtn } from 'mdbreact'\r\nimport Navbar from '../components/share/Navbar'\r\nimport { connect } from 'react-redux'\r\nimport { io } from \"socket.io-client\"\r\nimport { Marshalling, UnMarshalling } from '../Redux/Actions/MarshalService'\r\n\r\n//Always instantiate this\r\nconst socket = io('http://localhost:2222/', { transports: ['websocket'] })\r\n\r\nclass OpenAccount extends Component {\r\n    componentDidMount() {\r\n        socket.on('Connect-Establisment', (data) => console.log(data))\r\n    }\r\n\r\n    state = { \r\n        \r\n        // AccName: localStorage.getItem(\"accname\"),\r\n        // Password: localStorage.getItem(\"password\"),\r\n        // Currency: localStorage.getItem(\"currency\"),\r\n        // Balance: localStorage.getItem(\"balance\"),\r\n        AccName: \"\",\r\n        Password: \"\",\r\n        Currency: \"\",\r\n        Balance: \"\",\r\n    }\r\n    initiateOpen = () => {\r\n        let sendingData = {\r\n            AccName: this.state.AccName,\r\n            Password: this.state.Password,\r\n            Currency: this.state.Currency,\r\n            Balance: parseFloat(tthis.state.Balance),\r\n            //Mode is 0,1,2 [Must send]\r\n            Mode: 1\r\n        }\r\n        let marshallData = Marshalling(sendingData)\r\n        socket.emit('open-account', marshallData)\r\n        //Do timeout at this portion\r\n\r\n        socket.on('open-account-reply', (data) => {\r\n            data = UnMarshalling(data)\r\n            var reply = data['Server-Response']\r\n            console.log(reply)\r\n            //Do what ever you want\r\n            socket.emit('open-account-ack', marshallData)\r\n\r\n            console.log(data)\r\n        })\r\n    }\r\n    CallbackFunction = () => {\r\n        socket.on('monitor-updates', (data) => {\r\n            data = UnMarshalling(data)\r\n            //Do what ever you want\r\n            console.log(data)\r\n        })\r\n    }\r\n    back = () => {\r\n        this.props.history.push('/home')\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n          [e.target.id]: e.target.value\r\n        })\r\n      }\r\n  render() {\r\n    return (\r\n        <div>\r\n        <Navbar /><br />\r\n        <MDBContainer>\r\n            <MDBCard id=\"classic-card\">\r\n                <MDBCardBody className=\"black-text\">\r\n                    <h3 className=\"text-center\">\r\n                        <MDBIcon icon=\"user-check\" /> Open Account:\r\n                    </h3>\r\n                    <hr className=\"hr-light\" />\r\n                     <MDBInput\r\n                        className=\"black-text\"\r\n                        iconClass=\"black-text\"\r\n                        label=\"Account Name\"\r\n                        icon=\"user\"\r\n                        id=\"AccName\"\r\n                        type=\"text\"\r\n                        value={this.state.AccName}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                     <MDBInput\r\n                        className=\"black-text\"\r\n                        iconClass=\"black-text\"\r\n                        label=\"Password\"\r\n                        icon=\"lock\"\r\n                        id=\"Password\"\r\n                        type=\"password\"\r\n                        value={this.state.Password}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                     <MDBInput\r\n                        className=\"black-text\"\r\n                        iconClass=\"black-text\"\r\n                        label=\"SGD/MYR/KRW\"\r\n                        icon=\"money-bill\"\r\n                        id=\"Currency\"\r\n                        type=\"text\"\r\n                        value={this.state.Currency}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <MDBInput\r\n                        className=\"black-text\"\r\n                        iconClass=\"black-text\"\r\n                        label=\"Balance\"\r\n                        icon=\"dollar-sign\"\r\n                        type=\"number\"\r\n                        id=\"Balance\"\r\n                        value={this.state.Balance}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    \r\n                    <div className=\"text-center mt-4 black-text\">\r\n                        <MDBBtn color=\"white\" onClick={this.initiateOpen} > Open Account\r\n                        </MDBBtn>\r\n                        <MDBBtn color=\"white\" onClick={this.back} > Back\r\n                        </MDBBtn>\r\n                        <hr className=\"hr-light\" />\r\n                    </div>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </MDBContainer>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => ({});\r\nexport default connect(mapStateToProps,)(OpenAccount)"]},"metadata":{},"sourceType":"module"}