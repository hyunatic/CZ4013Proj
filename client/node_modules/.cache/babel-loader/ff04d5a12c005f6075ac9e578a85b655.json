{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\CZ4013Proj\\\\client\\\\src\\\\pages\\\\Deposit.jsx\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBCard, MDBCardBody, MDBIcon, MDBInput, MDBBtn } from 'mdbreact';\nimport Navbar from '../components/share/Navbar';\nimport { connect } from 'react-redux';\nimport { io } from \"socket.io-client\";\nimport { Marshalling, UnMarshalling } from '../Redux/Actions/MarshalService';\nimport \"../components/css/index.css\"; //Always instantiate this\n\nconst socket = io('http://localhost:2222/', {\n  transports: ['websocket']\n});\n\nclass Deposit extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getData = () => {\n      let output = localStorage.getItem('bal');\n      output = JSON.parse(output); //console.log(output);\n      //console.log(typeof(output));\n\n      this.setState({\n        out: output.amt\n      });\n      console.log(this.state.out);\n      console.log(typeof this.state.out);\n    };\n\n    this.state = {\n      AccountNo: '',\n      AccName: '',\n      Password: '',\n      Currency: '',\n      Amount: ''\n    };\n\n    this.initiateTransfer = () => {\n      let sendingData = {\n        AccountNo: this.state.AccountNo,\n        AccName: this.state.AccName,\n        Password: this.state.Password,\n        Currency: this.state.Currency,\n        Amount: parseFloat(this.state.Amount),\n        //Mode is 0,1,2 [Must send]\n        Mode: 1\n      };\n      let marshallData = Marshalling(sendingData);\n      socket.emit('deposit', marshallData); //Do timeout at this portion\n\n      socket.on('deposit-reply', data => {\n        data = UnMarshalling(data); //Do what ever you want\n        // var reply = data['Server-Response']\n        // console.log(reply)\n\n        this.setState({\n          accountAmount: data['Server-Response'][0].Balance\n        }); //console.log(this.state.accountAmount)\n        //console.log(data)\n\n        let input = {\n          'amt': this.state.accountAmount\n        };\n        localStorage.setItem('bal', JSON.stringify(input)); //Get from local Storage\n\n        let output = localStorage.getItem('bal');\n        output = JSON.parse(output);\n        this.setState({\n          out: output.amt\n        });\n        console.log(this.state.out);\n        socket.emit('deposit-ack', marshallData); //console.log(data)\n      });\n    };\n\n    this.CallbackFunction = () => {\n      socket.on('monitor-updates', data => {\n        data = UnMarshalling(data); //Do what ever you want\n        //console.log(data)\n      });\n    };\n\n    this.back = () => {\n      this.props.history.push('/home');\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    socket.on('Connect-Establisment', data => console.log(data));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"innerpagedesign\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(MDBView, {\n        children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: /*#__PURE__*/_jsxDEV(MDBCard, {\n            id: \"classic-card\",\n            children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n              className: \"black-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(MDBIcon, {\n                  icon: \"user\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 25\n                }, this), \" Deposit:\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"hr-light\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"black-text\",\n                iconClass: \"black-text\",\n                label: \"Account No\",\n                icon: \"envelope\",\n                id: \"AccountNo\",\n                type: \"number\",\n                value: this.state.AccountNo,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"black-text\",\n                iconClass: \"black-text\",\n                label: \"Account Name\",\n                icon: \"user\",\n                id: \"AccName\",\n                type: \"text\",\n                value: this.state.AccName,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"black-text\",\n                iconClass: \"black-text\",\n                label: \"Password\",\n                icon: \"lock\",\n                id: \"Password\",\n                type: \"password\",\n                value: this.state.Password,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"black-text\",\n                iconClass: \"black-text\",\n                label: \"SGD/MYR/KRW\",\n                icon: \"money-bill\",\n                id: \"Currency\",\n                type: \"text\",\n                value: this.state.Currency,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"black-text\",\n                iconClass: \"black-text\",\n                label: \"Deposit Amount\",\n                icon: \"dollar-sign\",\n                type: \"number\",\n                id: \"Amount\",\n                value: this.state.Amount,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-center\",\n                children: [\"balance: \", this.state.out]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mt-4 black-text\",\n                children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n                  color: \"dark-green\",\n                  onClick: this.initiateTransfer,\n                  children: \" Deposit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  color: \"dark-green\",\n                  onClick: this.getData,\n                  children: \" View Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  color: \"white\",\n                  onClick: this.back,\n                  children: \" Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                  className: \"hr-light\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps)(Deposit);","map":{"version":3,"sources":["C:/Users/Asus/Desktop/CZ4013Proj/client/src/pages/Deposit.jsx"],"names":["React","Component","MDBContainer","MDBCard","MDBCardBody","MDBIcon","MDBInput","MDBBtn","Navbar","connect","io","Marshalling","UnMarshalling","socket","transports","Deposit","getData","output","localStorage","getItem","JSON","parse","setState","out","amt","console","log","state","AccountNo","AccName","Password","Currency","Amount","initiateTransfer","sendingData","parseFloat","Mode","marshallData","emit","on","data","accountAmount","Balance","input","setItem","stringify","CallbackFunction","back","props","history","push","handleChange","e","target","id","value","componentDidMount","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { MDBContainer, MDBCard, MDBCardBody, MDBIcon, MDBInput, MDBBtn } from 'mdbreact'\r\nimport Navbar from '../components/share/Navbar'\r\nimport { connect } from 'react-redux'\r\nimport { io } from \"socket.io-client\"\r\nimport { Marshalling, UnMarshalling } from '../Redux/Actions/MarshalService'\r\nimport \"../components/css/index.css\"\r\n\r\n//Always instantiate this\r\nconst socket = io('http://localhost:2222/', { transports: ['websocket'] })\r\n\r\nclass Deposit extends Component {\r\n    \r\n    componentDidMount() {\r\n        socket.on('Connect-Establisment', (data) => console.log(data))\r\n    }\r\n    getData = () => {\r\n        let output = localStorage.getItem('bal');\r\n        output = JSON.parse(output);\r\n        //console.log(output);\r\n        //console.log(typeof(output));\r\n       this.setState({out: output.amt})\r\n       \r\n       console.log(this.state.out)\r\n       console.log(typeof(this.state.out))\r\n    }\r\n\r\n    state = { \r\n        AccountNo: '',\r\n        AccName: '',\r\n        Password: '',\r\n        Currency: '',\r\n        Amount: '',\r\n        \r\n    }\r\n\r\n   \r\n\r\n    initiateTransfer = () => {\r\n        let sendingData = {\r\n            AccountNo: this.state.AccountNo,\r\n            AccName: this.state.AccName,\r\n            Password: this.state.Password,\r\n            Currency: this.state.Currency,\r\n            Amount: parseFloat(this.state.Amount),\r\n            //Mode is 0,1,2 [Must send]\r\n            Mode: 1\r\n        }\r\n        let marshallData = Marshalling(sendingData)\r\n        socket.emit('deposit', marshallData)\r\n        //Do timeout at this portion\r\n\r\n        socket.on('deposit-reply', (data) => {\r\n            data = UnMarshalling(data)\r\n            //Do what ever you want\r\n            // var reply = data['Server-Response']\r\n            // console.log(reply)\r\n            this.setState({ accountAmount : data['Server-Response'][0].Balance })\r\n            //console.log(this.state.accountAmount)\r\n            //console.log(data)\r\n            let input = {\r\n                'amt': this.state.accountAmount,\r\n            };\r\n            localStorage.setItem('bal',JSON.stringify(input))\r\n\r\n            //Get from local Storage\r\n            let output = localStorage.getItem('bal');\r\n            output = JSON.parse(output);\r\n        \r\n            this.setState({out: output.amt})\r\n            console.log(this.state.out)    \r\n            socket.emit('deposit-ack', marshallData)\r\n\r\n            //console.log(data)\r\n        })\r\n    }\r\n\r\n    CallbackFunction = () => {\r\n        socket.on('monitor-updates', (data) => {\r\n            data = UnMarshalling(data)\r\n            \r\n            //Do what ever you want\r\n            //console.log(data)\r\n        })\r\n    }\r\n    back = () => {\r\n        this.props.history.push('/home')\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n          [e.target.id]: e.target.value\r\n        })\r\n      }\r\n  render() {\r\n    return (\r\n        <div id=\"innerpagedesign\">\r\n        <Navbar /><br />\r\n        <MDBView>\r\n        <MDBContainer>\r\n            <MDBCard id=\"classic-card\">\r\n                <MDBCardBody className=\"black-text\">\r\n                    <h3 className=\"text-center\">\r\n                        <MDBIcon icon=\"user\" /> Deposit:\r\n                    </h3>\r\n                    <hr className=\"hr-light\" />\r\n                    <MDBInput\r\n                        className=\"black-text\"\r\n                        iconClass=\"black-text\"\r\n                        label=\"Account No\"\r\n                        icon=\"envelope\"\r\n                        id=\"AccountNo\"\r\n                        type=\"number\"\r\n                        value={this.state.AccountNo}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                     <MDBInput\r\n                        className=\"black-text\"\r\n                        iconClass=\"black-text\"\r\n                        label=\"Account Name\"\r\n                        icon=\"user\"\r\n                        id=\"AccName\"\r\n                        type=\"text\"\r\n                        value={this.state.AccName}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                     <MDBInput\r\n                        className=\"black-text\"\r\n                        iconClass=\"black-text\"\r\n                        label=\"Password\"\r\n                        icon=\"lock\"\r\n                        id=\"Password\"\r\n                        type=\"password\"\r\n                        value={this.state.Password}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                     <MDBInput\r\n                        className=\"black-text\"\r\n                        iconClass=\"black-text\"\r\n                        label=\"SGD/MYR/KRW\"\r\n                        icon=\"money-bill\"\r\n                        id=\"Currency\"\r\n                        type=\"text\"\r\n                        value={this.state.Currency}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <MDBInput\r\n                        className=\"black-text\"\r\n                        iconClass=\"black-text\"\r\n                        label=\"Deposit Amount\"\r\n                        icon=\"dollar-sign\"\r\n                        type=\"number\"\r\n                        id=\"Amount\"\r\n                        value={this.state.Amount}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                     <p className=\"text-center\">balance: {this.state.out}</p>\r\n\r\n                    <div className=\"text-center mt-4 black-text\">\r\n                        <MDBBtn color=\"dark-green\" onClick={this.initiateTransfer} > Deposit\r\n                        </MDBBtn>\r\n                        \r\n                        <MDBBtn color=\"dark-green\" onClick={this.getData}> View Balance</MDBBtn>\r\n                        <MDBBtn color=\"white\" onClick={this.back} > Back\r\n                        </MDBBtn>\r\n                        <hr className=\"hr-light\" />\r\n                    </div>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </MDBContainer>\r\n        </MDBView>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => ({});\r\nexport default connect(mapStateToProps,)(Deposit)"]},"metadata":{},"sourceType":"module"}