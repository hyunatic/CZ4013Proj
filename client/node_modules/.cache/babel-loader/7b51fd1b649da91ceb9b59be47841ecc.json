{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Iskandar\\\\Downloads\\\\CZ4013Proj\\\\client\\\\src\\\\pages\\\\MonitorUpdate.jsx\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation, MDBBtn } from \"mdbreact\";\nimport { connect } from 'react-redux';\nimport Navbar from '../components/share/Navbar';\nimport Footer from '../components/share/Footer';\nimport { io } from \"socket.io-client\";\nimport { Marshalling, UnMarshalling } from '../Redux/Actions/MarshalService'; //Always instantiate this\n\nconst socket = io('http://localhost:2222/', {\n  transports: ['websocket']\n});\n\nclass MonitorUpdate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      accountAmount: 0,\n      timeoutRetransmit: true,\n      logger: []\n    };\n\n    this.CheckUpdate = () => {\n      socket.on('monitor-updates', data => {\n        data = UnMarshalling(data); //This part needs filtering\n\n        console.log(data);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.CheckUpdate(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Monitoring Update: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), this.state.logger && this.state.logger.map(x => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [x.AccountNo, \" / \", x.AccName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 70\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MonitorUpdate;","map":{"version":3,"sources":["C:/Users/Iskandar/Downloads/CZ4013Proj/client/src/pages/MonitorUpdate.jsx"],"names":["React","Component","MDBContainer","MDBRow","MDBCol","MDBAnimation","MDBBtn","connect","Navbar","Footer","io","Marshalling","UnMarshalling","socket","transports","MonitorUpdate","state","accountAmount","timeoutRetransmit","logger","CheckUpdate","on","data","console","log","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","map","x","AccountNo","AccName"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,YAAvC,EAAqDC,MAArD,QAAmE,UAAnE;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,iCAA3C,C,CAEA;;AACA,MAAMC,MAAM,GAAGH,EAAE,CAAC,wBAAD,EAA2B;AAAEI,EAAAA,UAAU,EAAE,CAAC,WAAD;AAAd,CAA3B,CAAjB;;AAEA,MAAMC,aAAN,SAA4Bd,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCe,KAFkC,GAE1B;AACJC,MAAAA,aAAa,EAAE,CADX;AAEJC,MAAAA,iBAAiB,EAAE,IAFf;AAGJC,MAAAA,MAAM,EAAE;AAHJ,KAF0B;;AAAA,SAalCC,WAbkC,GAapB,MAAM;AAChBP,MAAAA,MAAM,CAACQ,EAAP,CAAU,iBAAV,EAA6BC,IAAD,IAAU;AAClCA,QAAAA,IAAI,GAAGV,aAAa,CAACU,IAAD,CAApB,CADkC,CAElC;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,OAJD;AAKH,KAnBiC;AAAA;;AAOlCG,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKP,WAAL,EAAP,EAA2B,IAA3B,CAA3B;AACH;;AACDQ,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACH;;AASDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eACc;AAAA;AAAA;AAAA;AAAA,cADd,eAEI,QAAC,YAAD;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKd,KAAL,CAAWG,MAAX,IAAqB,KAAKH,KAAL,CAAWG,MAAX,CAAkBY,GAAlB,CAAsBC,CAAC,iBAAI;AAAA,qBAAIA,CAAC,CAACC,SAAN,SAAoBD,CAAC,CAACE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3B,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAlCiC;;AAqCtC,eAAgBnB,aAAhB","sourcesContent":["import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation, MDBBtn } from \"mdbreact\"\r\nimport { connect } from 'react-redux'\r\nimport Navbar from '../components/share/Navbar'\r\nimport Footer from '../components/share/Footer'\r\nimport { io } from \"socket.io-client\"\r\nimport { Marshalling, UnMarshalling } from '../Redux/Actions/MarshalService'\r\n\r\n//Always instantiate this\r\nconst socket = io('http://localhost:2222/', { transports: ['websocket'] })\r\n\r\nclass MonitorUpdate extends Component {\r\n\r\n    state = {\r\n        accountAmount: 0,\r\n        timeoutRetransmit: true,\r\n        logger: []\r\n    }\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => this.CheckUpdate(), 5000)\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n    CheckUpdate = () => {\r\n        socket.on('monitor-updates',(data) => {\r\n            data = UnMarshalling(data)\r\n            //This part needs filtering\r\n            console.log(data)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar /><br />\r\n                <MDBContainer>\r\n                    <h3>Monitoring Update: </h3>\r\n                    {this.state.logger && this.state.logger.map(x => <p>{x.AccountNo} / {x.AccName}</p>)}\r\n                </MDBContainer>\r\n                <br />\r\n                <br />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (MonitorUpdate)\r\n"]},"metadata":{},"sourceType":"module"}